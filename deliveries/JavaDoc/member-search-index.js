memberSearchIndex = [{"p":"Controller.Network","c":"ClientAdapter","l":"addObserver(ClientObserver)","url":"addObserver(Controller.Network.ClientObserver)"},{"p":"Client.View","c":"ServerAdapter","l":"addObserver(ServerObserver)","url":"addObserver(Client.View.ServerObserver)"},{"p":"Model","c":"GameTest","l":"addPlayer_player_addPlayerToTheArrayAndIncrementTurnNUmber()"},{"p":"Controller","c":"GameControl","l":"addPlayer(Player)","url":"addPlayer(Model.Player)"},{"p":"Model","c":"Game","l":"addPlayer(Player)","url":"addPlayer(Model.Player)"},{"p":"Model","c":"Color","l":"ANSI_BLUE"},{"p":"Model","c":"Color","l":"ANSI_GREEN"},{"p":"Model","c":"Color","l":"ANSI_PURPLE"},{"p":"Model","c":"Color","l":"ANSI_RED"},{"p":"Model","c":"Color","l":"ANSI_WHITE"},{"p":"Model","c":"Color","l":"ANSI_YELLOW"},{"p":"Model","c":"Card","l":"Apollo"},{"p":"Controller.DivinityStrategies.SimpleGodsSimpleRules","c":"ApolloStrategy","l":"ApolloStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"ApolloStrategyTest","l":"ApolloStrategyTest()","url":"%3Cinit%3E()"},{"p":"Model","c":"Card","l":"Ares"},{"p":"Controller.DivinityStrategies.AdvancedGods","c":"AresStrategy","l":"AresStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"AresStrategyTest","l":"AresStrategyTest()","url":"%3Cinit%3E()"},{"p":"Model","c":"Card","l":"Artemis"},{"p":"Controller.DivinityStrategies.SimpleGodsSimpleRules","c":"ArtemisStrategy","l":"ArtemisStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"ArtemisStrategyTest","l":"ArtemisStrategyTest()","url":"%3Cinit%3E()"},{"p":"Controller.Network","c":"VCEvent.Event","l":"ask_for_divinity_activation"},{"p":"Controller.Network","c":"VCEvent.Event","l":"ask_for_worker"},{"p":"Controller","c":"VirtualView","l":"askDivinityActivation(Player, String)","url":"askDivinityActivation(Model.Player,java.lang.String)"},{"p":"Controller","c":"VirtualViewTesting","l":"askDivinityActivation(Player, String)","url":"askDivinityActivation(Model.Player,java.lang.String)"},{"p":"Controller","c":"VirtualView","l":"askForDate(int)"},{"p":"Controller","c":"VirtualView","l":"askForUsername(int, boolean)","url":"askForUsername(int,boolean)"},{"p":"Controller","c":"VirtualView","l":"askForWorker(Player, ArrayList<Coordinates>)","url":"askForWorker(Model.Player,java.util.ArrayList)"},{"p":"Controller","c":"VirtualViewTesting","l":"askForWorker(Player, ArrayList<Coordinates>)","url":"askForWorker(Model.Player,java.util.ArrayList)"},{"p":"Model","c":"Player","l":"assignWorker(int, int, int)","url":"assignWorker(int,int,int)"},{"p":"Model","c":"Card","l":"Athena"},{"p":"Controller.DivinityStrategies.SimpleGodsSimpleRules","c":"AthenaStrategy","l":"AthenaStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"AthenaStrategyTest","l":"AthenaStrategyTest()","url":"%3Cinit%3E()"},{"p":"Model","c":"Card","l":"Atlas"},{"p":"Controller.DivinityStrategies.SimpleGodsSimpleRules","c":"AtlasStrategy","l":"AtlasStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"AtlasStrategyTest","l":"AtlasStrategyTest()","url":"%3Cinit%3E()"},{"p":"Model","c":"Board","l":"Board()","url":"%3Cinit%3E()"},{"p":"Model","c":"BoardCell","l":"BoardCell()","url":"%3Cinit%3E()"},{"p":"Client.View.GUI","c":"BoardCellWorker","l":"BoardCellWorker(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"Model","c":"BoardTest","l":"BoardTest()","url":"%3Cinit%3E()"},{"p":"Model","c":"BoardTest","l":"build()"},{"p":"Controller","c":"DivinityContext","l":"build(Worker, ArrayList<Coordinates>, int, Game, Board)","url":"build(Model.Worker,java.util.ArrayList,int,Model.Game,Model.Board)"},{"p":"Controller","c":"TurnStrategy","l":"build(Worker, ArrayList<Coordinates>, int, Game, Board)","url":"build(Model.Worker,java.util.ArrayList,int,Model.Game,Model.Board)"},{"p":"Controller.DivinityStrategies","c":"DefaultStrategy","l":"build(Worker, ArrayList<Coordinates>, int, Game, Board)","url":"build(Model.Worker,java.util.ArrayList,int,Model.Game,Model.Board)"},{"p":"Controller.DivinityStrategies.SimpleGodsSimpleRules","c":"AtlasStrategy","l":"build(Worker, ArrayList<Coordinates>, int, Game, Board)","url":"build(Model.Worker,java.util.ArrayList,int,Model.Game,Model.Board)"},{"p":"Client.View.GUI","c":"GUI","l":"buildDateWindow()"},{"p":"Client.View","c":"CLI","l":"buildEvent(ClientNetworkHandler, Object, VCEvent.Event)","url":"buildEvent(Client.View.ClientNetworkHandler,java.lang.Object,Controller.Network.VCEvent.Event)"},{"p":"Client.View.GUI","c":"GUI","l":"buildGodsWindow(ArrayList<String>)","url":"buildGodsWindow(java.util.ArrayList)"},{"p":"Client.View.GUI","c":"GUI","l":"buildJDialogForFirstPlayer(String)","url":"buildJDialogForFirstPlayer(java.lang.String)"},{"p":"Client.View.GUI","c":"GUI","l":"buildLoginWindow()"},{"p":"Client.View.GUI","c":"GUI","l":"buildMainWindow()"},{"p":"Client.View.GUI","c":"GUI","l":"buildNumberOfPlayersWindow()"},{"p":"Model","c":"BoardCell","l":"buildOnBoarCell()"},{"p":"Model","c":"Board","l":"buildOnBoard(int, int)","url":"buildOnBoard(int,int)"},{"p":"Controller","c":"DefaultStrategyTest","l":"buildTest()"},{"p":"Model","c":"GameTest","l":"buildTo_LevelAndCoordinates_BuiltTheLevelPassedInTheCoordinatesPassed()"},{"p":"Model","c":"Game","l":"buildTo(int, int, int)","url":"buildTo(int,int,int)"},{"p":"Model","c":"Game","l":"buildUp(int, int)","url":"buildUp(int,int)"},{"p":"Controller.Network","c":"ClientEventReceiver","l":"canReceiveEvents()"},{"p":"Controller","c":"DivinityContext","l":"checkAvailableBuildSpots(Player, Worker, Board)","url":"checkAvailableBuildSpots(Model.Player,Model.Worker,Model.Board)"},{"p":"Controller","c":"TurnStrategy","l":"checkAvailableBuildSpots(Player, Worker, Board)","url":"checkAvailableBuildSpots(Model.Player,Model.Worker,Model.Board)"},{"p":"Controller.DivinityStrategies","c":"DefaultStrategy","l":"checkAvailableBuildSpots(Player, Worker, Board)","url":"checkAvailableBuildSpots(Model.Player,Model.Worker,Model.Board)"},{"p":"Controller.DivinityStrategies.AdvancedGods","c":"HestiaStrategy","l":"checkAvailableBuildSpots(Player, Worker, Board)","url":"checkAvailableBuildSpots(Model.Player,Model.Worker,Model.Board)"},{"p":"Controller.DivinityStrategies.AdvancedGods","c":"ZeusStrategy","l":"checkAvailableBuildSpots(Player, Worker, Board)","url":"checkAvailableBuildSpots(Model.Player,Model.Worker,Model.Board)"},{"p":"Controller","c":"DivinityContext","l":"checkAvailableMoveSpots(Player, Worker, Board, boolean)","url":"checkAvailableMoveSpots(Model.Player,Model.Worker,Model.Board,boolean)"},{"p":"Controller","c":"TurnStrategy","l":"checkAvailableMoveSpots(Player, Worker, Board, boolean)","url":"checkAvailableMoveSpots(Model.Player,Model.Worker,Model.Board,boolean)"},{"p":"Controller.DivinityStrategies","c":"DefaultStrategy","l":"checkAvailableMoveSpots(Player, Worker, Board, boolean)","url":"checkAvailableMoveSpots(Model.Player,Model.Worker,Model.Board,boolean)"},{"p":"Controller.DivinityStrategies.SimpleGodsCompleteRules","c":"MinotaurStrategy","l":"checkAvailableMoveSpots(Player, Worker, Board, boolean)","url":"checkAvailableMoveSpots(Model.Player,Model.Worker,Model.Board,boolean)"},{"p":"Controller.DivinityStrategies.SimpleGodsSimpleRules","c":"ApolloStrategy","l":"checkAvailableMoveSpots(Player, Worker, Board, boolean)","url":"checkAvailableMoveSpots(Model.Player,Model.Worker,Model.Board,boolean)"},{"p":"Controller.DivinityStrategies.AdvancedGods","c":"AresStrategy","l":"checkAvailableRemoveSpots(Worker, Board)","url":"checkAvailableRemoveSpots(Model.Worker,Model.Board)"},{"p":"Controller","c":"VirtualView","l":"checkConnections()"},{"p":"Client.View","c":"CLI","l":"checkEvent(ClientNetworkHandler)","url":"checkEvent(Client.View.ClientNetworkHandler)"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"checkFinishFlags()"},{"p":"Client.Controller","c":"Controller","l":"checkLimits(int)"},{"p":"Client.Controller","c":"Controller","l":"checkNumberOfPlayers(int)"},{"p":"Client.Controller","c":"Controller","l":"checkRequestedPosition(ArrayList<Coordinates>, Coordinates)","url":"checkRequestedPosition(java.util.ArrayList,Controller.Coordinates)"},{"p":"Controller","c":"DefaultStrategyTest","l":"checkValidMoveSpots_Athena()"},{"p":"Controller","c":"DefaultStrategyTest","l":"checkValidMoveSpots_corners()"},{"p":"Controller","c":"DefaultStrategyTest","l":"checkWinCondition_Test()"},{"p":"Controller","c":"DivinityContext","l":"checkWinCondition(Coordinates, Coordinates, Board)","url":"checkWinCondition(Controller.Coordinates,Controller.Coordinates,Model.Board)"},{"p":"Controller","c":"TurnStrategy","l":"checkWinCondition(Coordinates, Coordinates, Board)","url":"checkWinCondition(Controller.Coordinates,Controller.Coordinates,Model.Board)"},{"p":"Controller.DivinityStrategies","c":"DefaultStrategy","l":"checkWinCondition(Coordinates, Coordinates, Board)","url":"checkWinCondition(Controller.Coordinates,Controller.Coordinates,Model.Board)"},{"p":"Controller.DivinityStrategies.SimpleGodsCompleteRules","c":"PanStrategy","l":"checkWinCondition(Coordinates, Coordinates, Board)","url":"checkWinCondition(Controller.Coordinates,Controller.Coordinates,Model.Board)"},{"p":"Model","c":"Player","l":"chooseCard(String)","url":"chooseCard(java.lang.String)"},{"p":"Client.View","c":"CLI","l":"chooseCoordinate(String)","url":"chooseCoordinate(java.lang.String)"},{"p":"Model","c":"GameTest","l":"chooseInitialPosition_playerCoordinatesAndIndex_SetBoardAndCreateWorker()"},{"p":"Model","c":"Game","l":"chooseInitialPosition(Player, int, int, int)","url":"chooseInitialPosition(Model.Player,int,int,int)"},{"p":"Model","c":"GameTest","l":"chooseInitialPosition1_playerAndCoordinates_SetTheBoardAndCreateNewWorker()"},{"p":"Client.View.GUI","c":"GUIHandler","l":"chosenGods"},{"p":"Model","c":"Card","l":"Chronus"},{"p":"Controller.DivinityStrategies.AdvancedGods","c":"ChronusStrategy","l":"ChronusStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"ChronusStrategyTest","l":"ChronusStrategyTest()","url":"%3Cinit%3E()"},{"p":"Model","c":"BoardTest","l":"clearBoard()"},{"p":"Model","c":"Game","l":"clearLastLostPlayer()"},{"p":"Client.View","c":"CLI","l":"CLI()","url":"%3Cinit%3E()"},{"p":"Client.View","c":"CLI","l":"CLI(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"Controller.Network","c":"ClientAdapter","l":"ClientAdapter(Socket, int)","url":"%3Cinit%3E(java.net.Socket,int)"},{"p":"Controller.Network","c":"ClientEventReceiver","l":"ClientEventReceiver(ServerNetworkHandler, int)","url":"%3Cinit%3E(Controller.Network.ServerNetworkHandler,int)"},{"p":"Client.View","c":"ClientNetworkHandler","l":"ClientNetworkHandler(CLI, String)","url":"%3Cinit%3E(Client.View.CLI,java.lang.String)"},{"p":"Client.View","c":"ClientNetworkHandler","l":"ClientNetworkHandler(GUIHandler, String)","url":"%3Cinit%3E(Client.View.GUI.GUIHandler,java.lang.String)"},{"p":"Client.View","c":"CLIForMac","l":"CLIForMac(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"Controller","c":"VirtualView","l":"closeAll()"},{"p":"Client.View","c":"ServerAdapter","l":"continueToRead()"},{"p":"Client.Controller","c":"Controller","l":"controllaData(Data)","url":"controllaData(Client.View.Data)"},{"p":"Client.Controller","c":"Controller","l":"Controller()","url":"%3Cinit%3E()"},{"p":"Controller","c":"Coordinates","l":"Coordinates(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"Client.View.GUI","c":"GUI","l":"createIcon(String)","url":"createIcon(java.lang.String)"},{"p":"Client.View.GUI","c":"GUIHandler","l":"currentCoordinate"},{"p":"Client.View","c":"Data","l":"Data(int, int, int)","url":"%3Cinit%3E(int,int,int)"},{"p":"Controller.Network","c":"VCEvent.Event","l":"date_request"},{"p":"Model","c":"Board","l":"deepCopy(Board)","url":"deepCopy(Model.Board)"},{"p":"Controller.DivinityStrategies","c":"DefaultStrategy","l":"DefaultStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"DefaultStrategyTest","l":"DefaultStrategyTest()","url":"%3Cinit%3E()"},{"p":"Model","c":"Card","l":"Demeter"},{"p":"Controller.DivinityStrategies.SimpleGodsSimpleRules","c":"DemeterStrategy","l":"DemeterStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"DemeterStrategyTest","l":"DemeterStrategyTest()","url":"%3Cinit%3E()"},{"p":"Client.View.GUI","c":"GUI","l":"destroyDateWindow()"},{"p":"Client.View.GUI","c":"GUI","l":"destroyGodsWindow(int)"},{"p":"Client.View.GUI","c":"GUI","l":"destroyLoginWindow()"},{"p":"Client.View.GUI","c":"GUI","l":"destroyNumberOfPlayersWindow()"},{"p":"Client.View.GUI","c":"GUI","l":"destroyWaitingLabel()"},{"p":"Controller.Network","c":"ClientEventReceiver","l":"didReceiveEvent(VCEvent)","url":"didReceiveEvent(Controller.Network.VCEvent)"},{"p":"Client.View","c":"ClientNetworkHandler","l":"didReceivePing(Integer)","url":"didReceivePing(java.lang.Integer)"},{"p":"Client.View","c":"ServerObserver","l":"didReceivePing(Integer)","url":"didReceivePing(java.lang.Integer)"},{"p":"Controller.Network","c":"ClientEventReceiver","l":"didReceivePing(Integer)","url":"didReceivePing(java.lang.Integer)"},{"p":"Controller.Network","c":"ClientObserver","l":"didReceivePingFrom(Integer, int)","url":"didReceivePingFrom(java.lang.Integer,int)"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"didReceivePingFrom(Integer, int)","url":"didReceivePingFrom(java.lang.Integer,int)"},{"p":"Client.View","c":"ClientNetworkHandler","l":"didReceiveVCEvent(VCEvent)","url":"didReceiveVCEvent(Controller.Network.VCEvent)"},{"p":"Client.View","c":"ServerObserver","l":"didReceiveVCEvent(VCEvent)","url":"didReceiveVCEvent(Controller.Network.VCEvent)"},{"p":"Controller.Network","c":"ClientObserver","l":"didReceiveVCEventFrom(VCEvent, int)","url":"didReceiveVCEventFrom(Controller.Network.VCEvent,int)"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"didReceiveVCEventFrom(VCEvent, int)","url":"didReceiveVCEventFrom(Controller.Network.VCEvent,int)"},{"p":"Model","c":"Board","l":"DIM"},{"p":"Controller","c":"DivinityContext","l":"DivinityContext()","url":"%3Cinit%3E()"},{"p":"Client.View.GUI","c":"BoardCellWorker","l":"doInBackground()"},{"p":"Client.View.GUI","c":"GodWorker","l":"doInBackground()"},{"p":"Client.View.GUI","c":"GodsWorker","l":"doInBackground()"},{"p":"Client.View.GUI","c":"NumberOfPlayersWorker","l":"doInBackground()"},{"p":"Client.View","c":"Elements","l":"Elements()","url":"%3Cinit%3E()"},{"p":"Client.View","c":"CLI","l":"findIndex(ArrayList<Coordinates>, Coordinates)","url":"findIndex(java.util.ArrayList,Controller.Coordinates)"},{"p":"Controller.Network","c":"VCEvent.Event","l":"game_ended_foryou"},{"p":"Model","c":"Game","l":"Game()","url":"%3Cinit%3E()"},{"p":"Controller","c":"GameControl","l":"GameControl()","url":"%3Cinit%3E()"},{"p":"Model","c":"GameTest","l":"GameTest()","url":"%3Cinit%3E()"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"getAdapters()"},{"p":"Client.View","c":"Data","l":"getAnno()"},{"p":"Model","c":"Game","l":"getAvailableCards()"},{"p":"Model","c":"Player","l":"getBirthDate()"},{"p":"Client.View.GUI","c":"GUI","l":"getBoard()"},{"p":"Model","c":"Board","l":"getBoardGame()"},{"p":"Model","c":"Game","l":"getBoardGame()"},{"p":"Model","c":"Game","l":"getBoardGameImmutable()"},{"p":"Model","c":"Board","l":"getBoardHeight(int, int)","url":"getBoardHeight(int,int)"},{"p":"Controller.Network","c":"VCEvent","l":"getBoardImmutable()"},{"p":"Model","c":"Board","l":"getBoardWorker(int, int)","url":"getBoardWorker(int,int)"},{"p":"Controller.Network","c":"VCEvent","l":"getBox()"},{"p":"Client.View","c":"Elements","l":"getBuilding(int)"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"getClients()"},{"p":"Model","c":"Player","l":"getColor()"},{"p":"Model","c":"Worker","l":"getColor()"},{"p":"Controller.Network","c":"VCEvent","l":"getCommand()"},{"p":"Client.View.GUI","c":"GUI","l":"getDateNextButton()"},{"p":"Client.View.GUI","c":"GUI","l":"getDayTextField()"},{"p":"Client.View","c":"CLI","l":"getE()"},{"p":"Model","c":"Color","l":"getEscape()"},{"p":"Client.View","c":"ClientNetworkHandler","l":"getFromServer()"},{"p":"Model","c":"Player","l":"getGameCard()"},{"p":"Client.View","c":"Data","l":"getGiorno()"},{"p":"Model","c":"BoardCell","l":"getHeight()"},{"p":"Client.View.GUI","c":"GUI","l":"getImgGodsButtons()"},{"p":"Client.View.GUI","c":"GUI","l":"getIpButton()"},{"p":"Client.View.GUI","c":"GUI","l":"getIpTextField()"},{"p":"Model","c":"Game","l":"getLastLostPlayer()"},{"p":"Client.View.GUI","c":"GUI","l":"getLoginNextButton()"},{"p":"Client.View.GUI","c":"GUI","l":"getLowerLabel()"},{"p":"Client.View.GUI","c":"GUI","l":"getMainFrame()"},{"p":"Client.View","c":"Data","l":"getMese()"},{"p":"Client.View.GUI","c":"GUI","l":"getMonthTextField()"},{"p":"Controller.Network","c":"ClientAdapter","l":"getNumber()"},{"p":"Controller","c":"VirtualView","l":"getNumberOfPlayers()"},{"p":"Client.View","c":"ClientNetworkHandler","l":"getPlayerID()"},{"p":"Controller","c":"VirtualView","l":"getPlayers()"},{"p":"Model","c":"Game","l":"getPlayers()"},{"p":"Model","c":"Worker","l":"getPositionX()"},{"p":"Model","c":"Worker","l":"getPositionY()"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"getServer()"},{"p":"Client.View.GUI","c":"GUI","l":"getThree()"},{"p":"Model","c":"Game","l":"getTurnNumber()"},{"p":"Client.View.GUI","c":"GUI","l":"getTwo()"},{"p":"Client.View.GUI","c":"GUI","l":"getUndo()"},{"p":"Client.View.GUI","c":"GUI","l":"getUpperLabel()"},{"p":"Model","c":"Player","l":"getUsername()"},{"p":"Client.View.GUI","c":"GUI","l":"getUsernameTextField()"},{"p":"Client.View","c":"ClientNetworkHandler","l":"getWinner()"},{"p":"Model","c":"Game","l":"getWinner()"},{"p":"Client.View","c":"Elements","l":"getWorker()"},{"p":"Model","c":"Player","l":"getWorker(int)"},{"p":"Model","c":"BoardCell","l":"getWorkerBuilder()"},{"p":"Model","c":"SocketBoardCell","l":"getWorkerColor()"},{"p":"Controller","c":"Coordinates","l":"getX()"},{"p":"Controller","c":"Coordinates","l":"getY()"},{"p":"Client.View.GUI","c":"GUI","l":"getYearTextField()"},{"p":"Client.View.GUI","c":"GodsWorker","l":"GodsWorker(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"Client.View.GUI","c":"GodWorker","l":"GodWorker(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"Client.View.GUI","c":"GUI","l":"GUI()","url":"%3Cinit%3E()"},{"p":"Client.View.GUI","c":"GUIHandler","l":"GUIHandler(GUI, String)","url":"%3Cinit%3E(Client.View.GUI.GUI,java.lang.String)"},{"p":"Controller.Network","c":"ClientAdapter","l":"handleClientConnection()"},{"p":"Model","c":"Card","l":"Hephaestus"},{"p":"Controller.DivinityStrategies.SimpleGodsCompleteRules","c":"HephaestusStrategy","l":"HephaestusStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"HephaestusStrategyTest","l":"HephaestusStrategyTest()","url":"%3Cinit%3E()"},{"p":"Model","c":"Card","l":"Hestia"},{"p":"Controller.DivinityStrategies.AdvancedGods","c":"HestiaStrategy","l":"HestiaStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"HestiaStrategyTest","l":"HestiaStrategyTest()","url":"%3Cinit%3E()"},{"p":"Controller.Network","c":"VCEvent.Event","l":"id"},{"p":"Client.View","c":"CLI","l":"insertDate()"},{"p":"Client.View","c":"CLI","l":"isAMac()"},{"p":"Client.View","c":"ClientNetworkHandler","l":"isEndGame()"},{"p":"Controller.Network","c":"ClientAdapter","l":"isFinishClientAdapter()"},{"p":"Controller.Network","c":"ClientEventReceiver","l":"isFinishClientReceiver()"},{"p":"Controller.Network","c":"ClientEventReceiver","l":"isFinishPing()"},{"p":"Model","c":"Game","l":"isGameStopped()"},{"p":"Client.View","c":"Data","l":"isGreaterthan(Data)","url":"isGreaterthan(Client.View.Data)"},{"p":"Client.View","c":"ClientNetworkHandler","l":"isIdArrived()"},{"p":"Client.Controller","c":"Controller","l":"isInArrayListOfGods(String, ArrayList<String>)","url":"isInArrayListOfGods(java.lang.String,java.util.ArrayList)"},{"p":"Client.Controller","c":"Controller","l":"isLeapYear(int)"},{"p":"Client.View","c":"ClientNetworkHandler","l":"isServerIsDied()"},{"p":"Controller","c":"VirtualView","l":"isSetUpisReady()"},{"p":"Controller","c":"VirtualView","l":"isStartNewGame()"},{"p":"Controller","c":"VirtualView","l":"isUndoOn()"},{"p":"Client.View","c":"ClientNetworkHandler","l":"isUpdateView()"},{"p":"Client.View.GUI","c":"GUIHandler","l":"launchConnection()"},{"p":"Client.View.GUI","c":"Main","l":"Main()","url":"%3Cinit%3E()"},{"p":"Model","c":"Main","l":"Main()","url":"%3Cinit%3E()"},{"p":"Client.View","c":"CLI","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"Client.View.GUI","c":"Main","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"Controller","c":"GameControl","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"Model","c":"Main","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"Model","c":"Card","l":"Minotaur"},{"p":"Controller.DivinityStrategies.SimpleGodsCompleteRules","c":"MinotaurStrategy","l":"MinotaurStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"MinotaurStrategyTest","l":"MinotaurStrategyTest()","url":"%3Cinit%3E()"},{"p":"Controller","c":"DivinityContext","l":"move(Worker, ArrayList<Coordinates>, int, Game, Board)","url":"move(Model.Worker,java.util.ArrayList,int,Model.Game,Model.Board)"},{"p":"Controller","c":"TurnStrategy","l":"move(Worker, ArrayList<Coordinates>, int, Game, Board)","url":"move(Model.Worker,java.util.ArrayList,int,Model.Game,Model.Board)"},{"p":"Controller.DivinityStrategies","c":"DefaultStrategy","l":"move(Worker, ArrayList<Coordinates>, int, Game, Board)","url":"move(Model.Worker,java.util.ArrayList,int,Model.Game,Model.Board)"},{"p":"Controller.DivinityStrategies.SimpleGodsCompleteRules","c":"MinotaurStrategy","l":"move(Worker, ArrayList<Coordinates>, int, Game, Board)","url":"move(Model.Worker,java.util.ArrayList,int,Model.Game,Model.Board)"},{"p":"Controller.DivinityStrategies.SimpleGodsSimpleRules","c":"ApolloStrategy","l":"move(Worker, ArrayList<Coordinates>, int, Game, Board)","url":"move(Model.Worker,java.util.ArrayList,int,Model.Game,Model.Board)"},{"p":"Model","c":"WorkerTest","l":"moveTo()"},{"p":"Model","c":"Worker","l":"moveTo(int, int)","url":"moveTo(int,int)"},{"p":"Model","c":"Player","l":"moveWith(Worker, int, int)","url":"moveWith(Model.Worker,int,int)"},{"p":"Controller","c":"ApolloStrategyTest","l":"moveWithApolloAthena_Test()"},{"p":"Controller","c":"ApolloStrategyTest","l":"moveWithApolloSwap_Test()"},{"p":"Controller","c":"MinotaurStrategyTest","l":"moveWithMinotaurAthena_Test()"},{"p":"Controller","c":"MinotaurStrategyTest","l":"moveWithMinotaurPush_Test()"},{"p":"Model","c":"GameTest","l":"moveWorker_worker_IsInTheCorrectPositionAndThePreviousOneIsFree()"},{"p":"Model","c":"PlayerTest","l":"moveWorker()"},{"p":"Model","c":"Game","l":"moveWorker(Worker, int, int)","url":"moveWorker(Model.Worker,int,int)"},{"p":"Controller","c":"DefaultStrategyTest","l":"moveWorkerTest()"},{"p":"Model","c":"GameTest","l":"moveWorkerWithoutNull()"},{"p":"Model","c":"Game","l":"moveWorkerWithoutNull(Worker, int, int)","url":"moveWorkerWithoutNull(Model.Worker,int,int)"},{"p":"Client.View.GUI","c":"GUIHandler","l":"myGod"},{"p":"Model","c":"GameTest","l":"nextTurnNumber_1with2players_0()"},{"p":"Model","c":"GameTest","l":"nextTurnNumber_2with3players_0()"},{"p":"Model","c":"Game","l":"nextTurnNumber()"},{"p":"Controller.Network","c":"VCEvent.Event","l":"not_your_turn"},{"p":"Controller","c":"VirtualView","l":"notYourTurn(Player)","url":"notYourTurn(Model.Player)"},{"p":"Controller","c":"VirtualViewTesting","l":"notYourTurn(Player)","url":"notYourTurn(Model.Player)"},{"p":"Controller.Network","c":"VCEvent.Event","l":"number_of_players"},{"p":"Client.View.GUI","c":"NumberOfPlayersWorker","l":"NumberOfPlayersWorker(int)","url":"%3Cinit%3E(int)"},{"p":"Client.View","c":"CLI","l":"paintBoardCell(Board, ArrayList<Coordinates>)","url":"paintBoardCell(Model.Board,java.util.ArrayList)"},{"p":"Client.View.GUI","c":"GUI","l":"paintButton(String, String)","url":"paintButton(java.lang.String,java.lang.String)"},{"p":"Model","c":"Card","l":"Pan"},{"p":"Controller.DivinityStrategies.SimpleGodsCompleteRules","c":"PanStrategy","l":"PanStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"PanStrategyTest","l":"PanStrategyTest()","url":"%3Cinit%3E()"},{"p":"Controller.Network","c":"VCEvent.Event","l":"ping"},{"p":"Controller.Network","c":"VCEvent.Event","l":"player_disconnected_game_ended"},{"p":"Controller","c":"VirtualView","l":"player_disconnected_game_ended(Player)","url":"player_disconnected_game_ended(Model.Player)"},{"p":"Model","c":"Player","l":"Player(String, Data)","url":"%3Cinit%3E(java.lang.String,Client.View.Data)"},{"p":"Controller","c":"VirtualView","l":"playerDisconnected(int)"},{"p":"Controller.Network","c":"ClientObserver","l":"playerDisconnectedNumber(int)"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"playerDisconnectedNumber(int)"},{"p":"Model","c":"Game","l":"playerLose(Player)","url":"playerLose(Model.Player)"},{"p":"Controller","c":"VirtualView","l":"playerNumber()"},{"p":"Client.View.GUI","c":"GUIHandler","l":"playersNumber"},{"p":"Model","c":"PlayerTest","l":"PlayerTest()","url":"%3Cinit%3E()"},{"p":"Client.View.GUI","c":"GUIHandler","l":"previousCoordinate"},{"p":"Client.View","c":"CLI","l":"printBoard(Board)","url":"printBoard(Model.Board)"},{"p":"Model","c":"Card","l":"Prometheus"},{"p":"Controller.DivinityStrategies.SimpleGodsCompleteRules","c":"PrometheusStrategy","l":"PrometheusStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"PrometheusStrategyTest","l":"PrometheusStrategyTest()","url":"%3Cinit%3E()"},{"p":"Client.View","c":"ClientNetworkHandler","l":"readByView()"},{"p":"Client.View","c":"Data","l":"readObject(ObjectInputStream)","url":"readObject(java.io.ObjectInputStream)"},{"p":"Controller","c":"Coordinates","l":"readObject(ObjectInputStream)","url":"readObject(java.io.ObjectInputStream)"},{"p":"Controller.Network","c":"VCEvent","l":"readObject(ObjectInputStream)","url":"readObject(java.io.ObjectInputStream)"},{"p":"Model","c":"Board","l":"readObject(ObjectInputStream)","url":"readObject(java.io.ObjectInputStream)"},{"p":"Model","c":"BoardCell","l":"readObject(ObjectInputStream)","url":"readObject(java.io.ObjectInputStream)"},{"p":"Model","c":"Player","l":"readObject(ObjectInputStream)","url":"readObject(java.io.ObjectInputStream)"},{"p":"Model","c":"SocketBoardCell","l":"readObject(ObjectInputStream)","url":"readObject(java.io.ObjectInputStream)"},{"p":"Model","c":"Worker","l":"readObject(ObjectInputStream)","url":"readObject(java.io.ObjectInputStream)"},{"p":"Client.View.GUI","c":"GUIHandler","l":"ready"},{"p":"Controller","c":"VirtualView","l":"receivedResponse(Object)","url":"receivedResponse(java.lang.Object)"},{"p":"Controller.Network","c":"ClientAdapter","l":"removeObserver(ClientObserver)","url":"removeObserver(Controller.Network.ClientObserver)"},{"p":"Client.View","c":"ServerAdapter","l":"removeObserver(ServerObserver)","url":"removeObserver(Client.View.ServerObserver)"},{"p":"Model","c":"Board","l":"reset()"},{"p":"Client.View","c":"ClientNetworkHandler","l":"run()"},{"p":"Client.View","c":"ServerAdapter","l":"run()"},{"p":"Controller.Network","c":"ClientAdapter","l":"run()"},{"p":"Controller.Network","c":"ClientEventReceiver","l":"run()"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"run()"},{"p":"Controller","c":"DivinityContext","l":"selectStrategy(String)","url":"selectStrategy(java.lang.String)"},{"p":"Controller.Network","c":"VCEvent.Event","l":"send_all_cards"},{"p":"Controller.Network","c":"VCEvent.Event","l":"send_cells_build"},{"p":"Controller.Network","c":"VCEvent.Event","l":"send_cells_move"},{"p":"Controller.Network","c":"VCEvent.Event","l":"send_cells_remove"},{"p":"Controller.Network","c":"VCEvent.Event","l":"send_chosen_cards"},{"p":"Controller.Network","c":"VCEvent.Event","l":"send_color"},{"p":"Controller.Network","c":"VCEvent.Event","l":"send_your_card"},{"p":"Controller","c":"VirtualView","l":"sendAllCards(Player, ArrayList<String>)","url":"sendAllCards(Model.Player,java.util.ArrayList)"},{"p":"Controller","c":"VirtualView","l":"sendAvailableBuild(Player, ArrayList<Coordinates>)","url":"sendAvailableBuild(Model.Player,java.util.ArrayList)"},{"p":"Controller","c":"VirtualViewTesting","l":"sendAvailableBuild(Player, ArrayList<Coordinates>)","url":"sendAvailableBuild(Model.Player,java.util.ArrayList)"},{"p":"Controller","c":"VirtualView","l":"sendAvailableMove(Player, ArrayList<Coordinates>)","url":"sendAvailableMove(Model.Player,java.util.ArrayList)"},{"p":"Controller","c":"VirtualViewTesting","l":"sendAvailableMove(Player, ArrayList<Coordinates>)","url":"sendAvailableMove(Model.Player,java.util.ArrayList)"},{"p":"Controller","c":"VirtualView","l":"sendAvailableRemove(Player, ArrayList<Coordinates>)","url":"sendAvailableRemove(Model.Player,java.util.ArrayList)"},{"p":"Controller","c":"VirtualViewTesting","l":"sendAvailableRemove(Player, ArrayList<Coordinates>)","url":"sendAvailableRemove(Model.Player,java.util.ArrayList)"},{"p":"Client.View","c":"CLI","l":"sendCells(String, ClientNetworkHandler, VCEvent.Event, VCEvent)","url":"sendCells(java.lang.String,Client.View.ClientNetworkHandler,Controller.Network.VCEvent.Event,Controller.Network.VCEvent)"},{"p":"Client.View.GUI","c":"GUIHandler","l":"sendCells(String, ClientNetworkHandler, VCEvent.Event, VCEvent)","url":"sendCells(java.lang.String,Client.View.ClientNetworkHandler,Controller.Network.VCEvent.Event,Controller.Network.VCEvent)"},{"p":"Controller","c":"VirtualView","l":"sendChosenCards(Player, ArrayList<String>)","url":"sendChosenCards(Model.Player,java.util.ArrayList)"},{"p":"Controller","c":"VirtualView","l":"sendColor(String, int)","url":"sendColor(java.lang.String,int)"},{"p":"Controller","c":"VirtualView","l":"sendNumberOfPlayer()"},{"p":"Client.View","c":"ClientNetworkHandler","l":"sendPing()"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"sendPingTo(VCEvent, int)","url":"sendPingTo(Controller.Network.VCEvent,int)"},{"p":"Controller","c":"VirtualView","l":"sendPlayerTurnNumber(ArrayList<Player>)","url":"sendPlayerTurnNumber(java.util.ArrayList)"},{"p":"Controller","c":"VirtualView","l":"sendUndoRequest(int)"},{"p":"Client.View","c":"ClientNetworkHandler","l":"sendVCEvent(VCEvent)","url":"sendVCEvent(Controller.Network.VCEvent)"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"sendVCEventTo(VCEvent, int)","url":"sendVCEventTo(Controller.Network.VCEvent,int)"},{"p":"Controller","c":"VirtualView","l":"sendYourCard(Player, String)","url":"sendYourCard(Model.Player,java.lang.String)"},{"p":"Client.View","c":"ServerAdapter","l":"ServerAdapter(Socket)","url":"%3Cinit%3E(java.net.Socket)"},{"p":"Client.View","c":"ClientNetworkHandler","l":"serverDied()"},{"p":"Client.View","c":"ServerObserver","l":"serverDied()"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"ServerNetworkHandler(VirtualView)","url":"%3Cinit%3E(Controller.VirtualView)"},{"p":"Client.View","c":"Data","l":"setAnno(int)"},{"p":"Model","c":"BoardCell","l":"setBoardCellHeight(int)"},{"p":"Model","c":"BoardCell","l":"setBoardCellWorker(Worker)","url":"setBoardCellWorker(Model.Worker)"},{"p":"Model","c":"Game","l":"setBoardGame(Board)","url":"setBoardGame(Model.Board)"},{"p":"Model","c":"Board","l":"setBoardHeight(int, int, int)","url":"setBoardHeight(int,int,int)"},{"p":"Model","c":"Board","l":"setBoardWorker(int, int, Worker)","url":"setBoardWorker(int,int,Model.Worker)"},{"p":"Controller.Network","c":"VCEvent","l":"setBox(Object)","url":"setBox(java.lang.Object)"},{"p":"Model","c":"PlayerTest","l":"setCard()"},{"p":"Model","c":"Game","l":"setChosenCards(ArrayList<String>)","url":"setChosenCards(java.util.ArrayList)"},{"p":"Model","c":"WorkerTest","l":"setColor()"},{"p":"Model","c":"Player","l":"setColor(Color)","url":"setColor(Model.Color)"},{"p":"Model","c":"Worker","l":"setColor(Color)","url":"setColor(Model.Color)"},{"p":"Controller.Network","c":"VCEvent","l":"setCommand(VCEvent.Event)","url":"setCommand(Controller.Network.VCEvent.Event)"},{"p":"Controller","c":"VirtualView","l":"setConnectedIndexToFalse(int)"},{"p":"Controller","c":"VirtualView","l":"setConnectedIndexToTrue(int)"},{"p":"Controller","c":"Coordinates","l":"setCoordinates(int, int)","url":"setCoordinates(int,int)"},{"p":"Client.View","c":"ClientNetworkHandler","l":"setFinish(boolean)"},{"p":"Client.View","c":"ServerAdapter","l":"setFinishAdapter(boolean)"},{"p":"Controller.Network","c":"ClientAdapter","l":"setFinishClientAdapter(boolean)"},{"p":"Controller.Network","c":"ClientEventReceiver","l":"setFinishClientReceiver(boolean)"},{"p":"Controller.Network","c":"ClientEventReceiver","l":"setFinishPing(boolean)"},{"p":"Client.View","c":"Data","l":"setGiorno(int)"},{"p":"Client.View","c":"ServerAdapter","l":"setInput(ObjectInputStream)","url":"setInput(java.io.ObjectInputStream)"},{"p":"Controller.Network","c":"ClientAdapter","l":"setInput(ObjectInputStream)","url":"setInput(java.io.ObjectInputStream)"},{"p":"Client.View.GUI","c":"GUI","l":"setIpButton(JButton)","url":"setIpButton(javax.swing.JButton)"},{"p":"Client.View","c":"Data","l":"setMese(int)"},{"p":"Client.View","c":"ServerAdapter","l":"setOutput(ObjectOutputStream)","url":"setOutput(java.io.ObjectOutputStream)"},{"p":"Controller.Network","c":"ClientAdapter","l":"setOutput(ObjectOutputStream)","url":"setOutput(java.io.ObjectOutputStream)"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"setPlayerNumber(int)"},{"p":"Controller","c":"VirtualView","l":"setPlayers(ArrayList<Player>)","url":"setPlayers(java.util.ArrayList)"},{"p":"Controller","c":"VirtualView","l":"setUndoOn(boolean)"},{"p":"Controller.Network","c":"VCEvent.Event","l":"setup_request"},{"p":"Controller","c":"ApolloStrategyTest","l":"setUp()"},{"p":"Controller","c":"AresStrategyTest","l":"setUp()"},{"p":"Controller","c":"ArtemisStrategyTest","l":"setUp()"},{"p":"Controller","c":"AthenaStrategyTest","l":"setUp()"},{"p":"Controller","c":"AtlasStrategyTest","l":"setUp()"},{"p":"Controller","c":"ChronusStrategyTest","l":"setUp()"},{"p":"Controller","c":"DefaultStrategyTest","l":"setUp()"},{"p":"Controller","c":"DemeterStrategyTest","l":"setUp()"},{"p":"Controller","c":"HephaestusStrategyTest","l":"setUp()"},{"p":"Controller","c":"HestiaStrategyTest","l":"setUp()"},{"p":"Controller","c":"MinotaurStrategyTest","l":"setUp()"},{"p":"Controller","c":"PanStrategyTest","l":"setUp()"},{"p":"Controller","c":"PrometheusStrategyTest","l":"setUp()"},{"p":"Controller","c":"TritonStrategyTest","l":"setUp()"},{"p":"Controller","c":"TurnControlTest","l":"setUp()"},{"p":"Controller","c":"ZeusStrategyTest","l":"setUp()"},{"p":"Model","c":"BoardTest","l":"setUp()"},{"p":"Model","c":"GameTest","l":"setUp()"},{"p":"Model","c":"PlayerTest","l":"setUp()"},{"p":"Model","c":"WorkerTest","l":"setUp()"},{"p":"Model","c":"GameTest","l":"setUpClass()"},{"p":"Model","c":"PlayerTest","l":"setWorkers()"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"SOCKET_PORT"},{"p":"Model","c":"SocketBoard","l":"SocketBoard()","url":"%3Cinit%3E()"},{"p":"Model","c":"SocketBoardCell","l":"SocketBoardCell(int, Worker)","url":"%3Cinit%3E(int,Model.Worker)"},{"p":"Controller","c":"TurnControl","l":"start()"},{"p":"Model","c":"Game","l":"startGame()"},{"p":"Controller","c":"TurnControlTest","l":"startTest()"},{"p":"Model","c":"Game","l":"stopGame(Player)","url":"stopGame(Model.Player)"},{"p":"Model","c":"GameTest","l":"tearDown()"},{"p":"Model","c":"PlayerTest","l":"tearDown()"},{"p":"Model","c":"WorkerTest","l":"tearDown()"},{"p":"Controller","c":"GameControl","l":"thread"},{"p":"Client.View","c":"Data","l":"toString()"},{"p":"Controller","c":"Coordinates","l":"toString()"},{"p":"Model","c":"Color","l":"toString()"},{"p":"Model","c":"Card","l":"Triton"},{"p":"Controller.DivinityStrategies.AdvancedGods","c":"TritonStrategy","l":"TritonStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"TritonStrategyTest","l":"TritonStrategyTest()","url":"%3Cinit%3E()"},{"p":"Controller","c":"DivinityContext","l":"turn(Player, Worker, Board, Game, int, VirtualView)","url":"turn(Model.Player,Model.Worker,Model.Board,Model.Game,int,Controller.VirtualView)"},{"p":"Controller","c":"TurnStrategy","l":"turn(Player, Worker, Board, Game, int, VirtualView)","url":"turn(Model.Player,Model.Worker,Model.Board,Model.Game,int,Controller.VirtualView)"},{"p":"Controller.DivinityStrategies","c":"DefaultStrategy","l":"turn(Player, Worker, Board, Game, int, VirtualView)","url":"turn(Model.Player,Model.Worker,Model.Board,Model.Game,int,Controller.VirtualView)"},{"p":"Controller.DivinityStrategies.AdvancedGods","c":"AresStrategy","l":"turn(Player, Worker, Board, Game, int, VirtualView)","url":"turn(Model.Player,Model.Worker,Model.Board,Model.Game,int,Controller.VirtualView)"},{"p":"Controller.DivinityStrategies.AdvancedGods","c":"ChronusStrategy","l":"turn(Player, Worker, Board, Game, int, VirtualView)","url":"turn(Model.Player,Model.Worker,Model.Board,Model.Game,int,Controller.VirtualView)"},{"p":"Controller.DivinityStrategies.AdvancedGods","c":"HestiaStrategy","l":"turn(Player, Worker, Board, Game, int, VirtualView)","url":"turn(Model.Player,Model.Worker,Model.Board,Model.Game,int,Controller.VirtualView)"},{"p":"Controller.DivinityStrategies.AdvancedGods","c":"TritonStrategy","l":"turn(Player, Worker, Board, Game, int, VirtualView)","url":"turn(Model.Player,Model.Worker,Model.Board,Model.Game,int,Controller.VirtualView)"},{"p":"Controller.DivinityStrategies.SimpleGodsCompleteRules","c":"HephaestusStrategy","l":"turn(Player, Worker, Board, Game, int, VirtualView)","url":"turn(Model.Player,Model.Worker,Model.Board,Model.Game,int,Controller.VirtualView)"},{"p":"Controller.DivinityStrategies.SimpleGodsCompleteRules","c":"PrometheusStrategy","l":"turn(Player, Worker, Board, Game, int, VirtualView)","url":"turn(Model.Player,Model.Worker,Model.Board,Model.Game,int,Controller.VirtualView)"},{"p":"Controller.DivinityStrategies.SimpleGodsSimpleRules","c":"ArtemisStrategy","l":"turn(Player, Worker, Board, Game, int, VirtualView)","url":"turn(Model.Player,Model.Worker,Model.Board,Model.Game,int,Controller.VirtualView)"},{"p":"Controller.DivinityStrategies.SimpleGodsSimpleRules","c":"AthenaStrategy","l":"turn(Player, Worker, Board, Game, int, VirtualView)","url":"turn(Model.Player,Model.Worker,Model.Board,Model.Game,int,Controller.VirtualView)"},{"p":"Controller.DivinityStrategies.SimpleGodsSimpleRules","c":"AtlasStrategy","l":"turn(Player, Worker, Board, Game, int, VirtualView)","url":"turn(Model.Player,Model.Worker,Model.Board,Model.Game,int,Controller.VirtualView)"},{"p":"Controller.DivinityStrategies.SimpleGodsSimpleRules","c":"DemeterStrategy","l":"turn(Player, Worker, Board, Game, int, VirtualView)","url":"turn(Model.Player,Model.Worker,Model.Board,Model.Game,int,Controller.VirtualView)"},{"p":"Controller","c":"TurnControl","l":"TurnControl(Player, int, Board, Game, VirtualView)","url":"%3Cinit%3E(Model.Player,int,Model.Board,Model.Game,Controller.VirtualView)"},{"p":"Controller","c":"TurnControlTest","l":"TurnControlTest()","url":"%3Cinit%3E()"},{"p":"Client.View","c":"CLI","l":"turnHeightIntoImage(Board, int, int)","url":"turnHeightIntoImage(Model.Board,int,int)"},{"p":"Controller.Network","c":"VCEvent.Event","l":"turnNumber"},{"p":"Controller","c":"AthenaStrategyTest","l":"turnTest_giveEffect()"},{"p":"Controller","c":"AresStrategyTest","l":"turnTest()"},{"p":"Controller","c":"ArtemisStrategyTest","l":"turnTest()"},{"p":"Controller","c":"AthenaStrategyTest","l":"turnTest()"},{"p":"Controller","c":"AtlasStrategyTest","l":"turnTest()"},{"p":"Controller","c":"ChronusStrategyTest","l":"turnTest()"},{"p":"Controller","c":"DefaultStrategyTest","l":"turnTest()"},{"p":"Controller","c":"DemeterStrategyTest","l":"turnTest()"},{"p":"Controller","c":"HephaestusStrategyTest","l":"turnTest()"},{"p":"Controller","c":"HestiaStrategyTest","l":"turnTest()"},{"p":"Controller","c":"PanStrategyTest","l":"turnTest()"},{"p":"Controller","c":"PrometheusStrategyTest","l":"turnTest()"},{"p":"Controller","c":"TritonStrategyTest","l":"turnTest()"},{"p":"Controller","c":"ZeusStrategyTest","l":"turnTest()"},{"p":"Client.View","c":"CLI","l":"turnWorkerIntoColoredImage(Board, int, int)","url":"turnWorkerIntoColoredImage(Model.Board,int,int)"},{"p":"Client.View","c":"CLIForMac","l":"turnWorkerIntoColoredImage(Board, int, int)","url":"turnWorkerIntoColoredImage(Model.Board,int,int)"},{"p":"Controller.Network","c":"VCEvent.Event","l":"undo_request"},{"p":"Controller","c":"VirtualView","l":"undoReceivedResponse(Object)","url":"undoReceivedResponse(java.lang.Object)"},{"p":"Controller.Network","c":"VCEvent.Event","l":"update"},{"p":"Client.View","c":"CLI","l":"update()"},{"p":"Client.View.GUI","c":"GUIHandler","l":"update()"},{"p":"Client.View","c":"CLI","l":"updateGo()"},{"p":"Client.View.GUI","c":"GUIHandler","l":"updateGo()"},{"p":"Client.View.GUI","c":"GUI","l":"updateGodBar(String)","url":"updateGodBar(java.lang.String)"},{"p":"Controller","c":"VirtualView","l":"upload(Board)","url":"upload(Model.Board)"},{"p":"Controller","c":"VirtualViewTesting","l":"upload(Board)","url":"upload(Model.Board)"},{"p":"Controller.Network","c":"VCEvent.Event","l":"username_request"},{"p":"Controller.Network","c":"VCEvent.Event","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"Model","c":"Card","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"Model","c":"Color","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"Controller.Network","c":"VCEvent.Event","l":"values()"},{"p":"Model","c":"Card","l":"values()"},{"p":"Model","c":"Color","l":"values()"},{"p":"Controller.Network","c":"VCEvent","l":"VCEvent(List<Board>)","url":"%3Cinit%3E(java.util.List)"},{"p":"Controller.Network","c":"VCEvent","l":"VCEvent(Object, VCEvent.Event)","url":"%3Cinit%3E(java.lang.Object,Controller.Network.VCEvent.Event)"},{"p":"Controller.Network","c":"ServerNetworkHandler","l":"virtualView"},{"p":"Controller","c":"VirtualView","l":"VirtualView()","url":"%3Cinit%3E()"},{"p":"Controller","c":"VirtualViewTesting","l":"VirtualViewTesting()","url":"%3Cinit%3E()"},{"p":"Client.View","c":"ServerAdapter","l":"waitToContinue()"},{"p":"Controller","c":"ChronusStrategyTest","l":"winConditionTest()"},{"p":"Model","c":"Worker","l":"Worker(int, int, Color)","url":"%3Cinit%3E(int,int,Model.Color)"},{"p":"Model","c":"WorkerTest","l":"WorkerTest()","url":"%3Cinit%3E()"},{"p":"Client.View","c":"Data","l":"writeObject(ObjectOutputStream)","url":"writeObject(java.io.ObjectOutputStream)"},{"p":"Controller","c":"Coordinates","l":"writeObject(ObjectOutputStream)","url":"writeObject(java.io.ObjectOutputStream)"},{"p":"Controller.Network","c":"VCEvent","l":"writeObject(ObjectOutputStream)","url":"writeObject(java.io.ObjectOutputStream)"},{"p":"Model","c":"Board","l":"writeObject(ObjectOutputStream)","url":"writeObject(java.io.ObjectOutputStream)"},{"p":"Model","c":"BoardCell","l":"writeObject(ObjectOutputStream)","url":"writeObject(java.io.ObjectOutputStream)"},{"p":"Model","c":"Player","l":"writeObject(ObjectOutputStream)","url":"writeObject(java.io.ObjectOutputStream)"},{"p":"Model","c":"SocketBoardCell","l":"writeObject(ObjectOutputStream)","url":"writeObject(java.io.ObjectOutputStream)"},{"p":"Model","c":"Worker","l":"writeObject(ObjectOutputStream)","url":"writeObject(java.io.ObjectOutputStream)"},{"p":"Controller.Network","c":"VCEvent.Event","l":"wrong_username"},{"p":"Controller.Network","c":"VCEvent.Event","l":"you_lost"},{"p":"Controller.Network","c":"VCEvent.Event","l":"you_won"},{"p":"Controller","c":"VirtualView","l":"youLost(Player, boolean, Player)","url":"youLost(Model.Player,boolean,Model.Player)"},{"p":"Controller","c":"VirtualView","l":"youWon(Player)","url":"youWon(Model.Player)"},{"p":"Model","c":"Card","l":"Zeus"},{"p":"Controller.DivinityStrategies.AdvancedGods","c":"ZeusStrategy","l":"ZeusStrategy()","url":"%3Cinit%3E()"},{"p":"Controller","c":"ZeusStrategyTest","l":"ZeusStrategyTest()","url":"%3Cinit%3E()"}]